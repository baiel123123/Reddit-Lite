stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."


ruff-lint:
  stage: test
  image: python:3.12
  script:
    - pip install poetry
    - poetry install
    - poetry run ruff check .
  only:
    - merge_requests
    - branches

deploy-job:      # This job runs in the deploy stage.
  stage: deploy
  image: alpine:latest
  only:
    - main
  environment: production
  before_script:
    - apk add --no-cache openssh
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" 'mkdir -p ~/project'
    - tar czf project.tar.gz ./*
    - scp -o StrictHostKeyChecking=no project.tar.gz "$SSH_USER@$SSH_HOST":~/project/
    - ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" '
        cd ~/project &&
        tar xzf project.tar.gz &&
        chmod +x deploy.sh &&
        ./deploy.sh
      '
