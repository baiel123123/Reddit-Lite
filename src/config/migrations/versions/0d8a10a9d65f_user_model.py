"""user model

Revision ID: 0d8a10a9d65f
Revises: 
Create Date: 2025-03-09 19:31:09.887781

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '0d8a10a9d65f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'genderenum') THEN CREATE TYPE genderenum AS ENUM ('MALE', 'FEMALE', 'OTHER'); END IF; END $$;")
    op.execute("DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'userstatus') THEN CREATE TYPE userstatus AS ENUM ('ACTIVE', 'BANNED', 'DELETED'); END IF; END $$;")
    op.execute("DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'socialplatform') THEN CREATE TYPE socialplatform AS ENUM ('CUSTOM', 'FACEBOOK', 'TWITTER', 'INSTAGRAM', 'YOUTUBE', 'TELEGRAM', 'TWITCH', 'DISCORD'); END IF; END $$;")

    gender_enum = sa.Enum('MALE', 'FEMALE', 'OTHER', name='genderenum')
    status_enum = sa.Enum('ACTIVE', 'BANNED', 'DELETED', name='userstatus')
    social_enum = sa.Enum('CUSTOM', 'FACEBOOK', 'TWITTER', 'INSTAGRAM', 'YOUTUBE', 'TELEGRAM', 'TWITCH', 'DISCORD', name='socialplatform')

    # таблицы ниже без вызова create() — типы уже созданы
    op.create_table('users',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('username', sa.String(length=50), nullable=False, unique=True),
        sa.Column('nickname', sa.String(length=50), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=False, unique=True),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('gender', gender_enum, nullable=False),
        sa.Column('status', status_enum, nullable=False, server_default='ACTIVE'),
        sa.Column('about_me', sa.String(length=255), nullable=True),
        sa.Column('date_of_birth', sa.DateTime(), nullable=False),
        sa.Column('is_user', sa.Boolean(), server_default=sa.text('true'), nullable=False),
        sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('is_super_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    )

    op.create_table('sociallinks',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('platform', social_enum, nullable=False),
        sa.Column('url', sa.String(length=255), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sociallinks')
    op.drop_table('users')
    # ### end Alembic commands ###
